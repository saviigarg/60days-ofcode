#include<iostream>
#include<vector>
#include<algorithm>
using namespace std;

void countingSort(vector<int>& arr, int size) {
    // Find the maximum element in the array
    int maxElement = *max_element(arr.begin(), arr.end());

    // Create a counting array with size equal to maxElement + 1
    vector<int> count(maxElement + 1, 0);

    // Count the occurrences of each element
    for (int i = 0; i < size; i++) {
        count[arr[i]]++;
    }

    // Reconstruct the sorted array based on count array
    int index = 0;
    for (int i = 0; i <= maxElement; i++) {
        while (count[i] > 0) {
            arr[index++] = i;
            count[i]--;
        }
    }
}

int main() {
    // Input the size of the array
    int size;
    cout << "Enter the size of the array: ";
    cin >> size;

    // Input the array elements
    vector<int> numbers;
    cout << "Enter " << size << " elements of the array:\n";
    for (int i = 0; i < size; i++) {
        int element;
        cin >> element;
        numbers.push_back(element);
    }

    cout << "Original Array: ";
    for (int i = 0; i < size; i++) {
        cout << numbers[i] << " ";
    }

    // Sort the array using counting sort
    countingSort(numbers, size);

    cout << "\nSorted Array: ";
    for (int i = 0; i < size; i++) {
        cout << numbers[i] << " ";
    }

    return 0;
}

#include<iostream>
#include<vector>
using namespace std;
int partition(vector<int>& arr, int s , int e){
  int pivot = arr[s];
  int cnt = 0;
  for(int i=s+1;i<=e;i++){
    if(arr[i]<pivot){
      cnt++;
    }
  }
  int pivotIndex = s+cnt;
  swap(arr[pivotIndex],arr[s]);
  int i=s, j=e;
  while(i<pivotIndex && j>pivotIndex){
    if(arr[i]<pivot){
      i++;
    }
    while(arr[j]>pivot){
      j--;
    }
    if(i<pivotIndex && j>pivotIndex){
      swap(arr[i++],arr[j--]);
    }
  }
  return pivotIndex;
}
void quickSort(vector<int>& arr, int s, int e){
  if(s>=e) return;
  int p = partition(arr, s, e);
  quickSort(arr,s,p-1);
  quickSort(arr,p+1,e);
}
int main(){
  //input the size of the array
  int size;
  cout << "Enter the size of the array: ";
  cin >> size;
  //input the  array elements
  vector<int>numbers;
  cout << "Enter " << size << " elements of the array:\n";
  for(int i=0; i<size; i++){
    int element;
    cin >> element;
    numbers.push_back(element);
  }
  cout << "Original Array: ";
  for(int i=0; i<size; i++){
    cout << numbers[i] << " ";
  }
  //sort the array using quick sort
  quickSort(numbers,0,size-1);
  cout << "\nSorted Array: ";
  for(int i=0; i<size; i++){
    cout << numbers[i] << " ";
  }
  return 0;
}
